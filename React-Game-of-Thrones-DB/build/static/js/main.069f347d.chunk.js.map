{"version":3,"sources":["components/error/error.jpg","components/header/index.js","components/header/header.js","services/gotService.js","components/spinner/index.js","components/spinner/spinner.js","components/error/errorMessage.js","components/randomChar/randomChar.js","components/randomChar/index.js","components/itemList/index.js","components/itemList/itemList.js","components/personDetails/index.js","components/personDetails/personDetails.js","components/app/index.js","components/app/app.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","href","GotService","_this","this","Object","classCallCheck","getResource","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","res","wrap","_context","prev","next","fetch","concat","_apiBase","sent","ok","Error","status","json","abrupt","stop","_x","apply","arguments","id","map","_transformCharacter","character","char","name","gender","born","died","culture","house","region","words","titles","overlord","ancestrakWeapons","book","numberOfpages","numberofPages","publiser","released","Spinner","ErrorMessage","Fragment","src","img","alt","RandomChar","gotService","state","loading","error","onCharLoaded","setState","onError","err","updateChar","Math","floor","random","getCharacter","then","catch","timerId","setInterval","clearInterval","console","log","_this$state","errorMessage","components_error_errorMessage","spinner","components_spinner","content","randomChar_View","Component","View","ItemList","charList","_this2","getAllCharacters","arr","_this3","item","i","key","onClick","props","onCharSelected","items","renderItems","PersonDetails","prevProps","charId","foo","bar","_this$state$char","App","showRandomChar","selectedChar","toggleRandomCahr","components_randomChar","Container","components_header","Row","Col","lg","size","offset","md","components_itemList","components_personDetails","ReactDOM","render","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.069f347d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error.8edd3d93.jpg\";","import Header from './header';\n\nexport default Header;","import React from 'react';\nimport './header.css';\n\nconst Header = () => {\n    return (\n        <div className=\"header\">\n            <h3 className=\"header-title\">\n                <a href=\"#\">\n                Game of Thrones DB\n                </a>\n            </h3>\n            <ul className=\"header-list\">\n                <li>\n                    <a href=\"#\">Characters</a>\n                </li>\n                <li>\n                    <a href=\"#\">Houses</a>\n                </li>\n                <li>\n                    <a href=\"#\">Books</a>   \n                </li>\n            </ul>\n        </div>\n    );\n};\n\nexport default Header;","\nexport default class GotService {\n    constructor() {\n        this._apiBase = 'https://www.anapioficeandfire.com/api';\n    }\n\n    getResource = async (url) => {\n        const res = await fetch(`${this._apiBase}${url}`);\n    \n        if (!res.ok) {\n          throw new Error(`Could not fetch ${url}` +\n            `, received ${res.status}`);\n        }\n        return await res.json();\n    }\n\n    getAllBooks() {\n        return this.getResource(`/books/`);\n    }\n    \n    getBook(id) {\n        return this.getResource(`/books/${id}/`);\n    }\n    \n    async getAllCharacters() {\n        const res = await this.getResource(`/characters?page=5&pageSize=10`);\n        return res.map(this._transformCharacter)\n    }\n    \n    async getCharacter (id) {\n        const character = await this.getResource(`/characters/${id}`);\n        return this._transformCharacter(character)\n    }\n    \n    getAllHouses() {\n        return this.getResource(`/houses/`);\n    }\n    \n    getHouse(id) {\n        return this.getResource(`/houses/${id}/`);\n    }\n\n    _transformCharacter(char) {\n        return {\n            name: char.name,\n            gender: char.gender,\n            born: char.born,\n            died: char.died,\n            culture: char.culture\n        }\n    }\n\n    __transformHouse(house){\n        return {\n            name: house.name,\n            region: house.region,\n            words: house.words,\n            titles: house.titles,\n            overlord: house.overlord,\n            ancestrakWeapons: house.ancestrakWeapons\n        }\n    }\n\n    _transformBook(book) {\n        return {\n            name: book.name,\n            numberOfpages: book.numberofPages,\n            publiser: book.publiser,\n            released: book.released\n        }\n    }\n}\n","import Spinner from './spinner';\r\nexport default Spinner;\r\n\r\n\r\n","  \r\nimport React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"lds-css ng-scope\">\r\n            <div className=\"lds-spin\"><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport './errorMessage.css';\r\nimport img from './error.jpg';\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n      <>\r\n        <img src={img} alt='error'></img>\r\n        <span>Something goes wrong</span>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import React, {Component} from 'react';\nimport './randomChar.css';\nimport gotService from '../../services/gotService';\nimport Spinner from '../spinner/';\nimport ErrorMessage from '../error/errorMessage';\n\n\nexport default class RandomChar extends Component {\n\n    gotService = new gotService();\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    componentDidMount() {\n        this.updateChar();\n        this.timerId = setInterval(this.updateChar, 1500);\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.timerId);\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false,\n        });\n    }\n\n    onError = (err) => {\n        this.setState({\n            error: true,\n            loading: false\n        });\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random()*140 + 25); // 25-140\n        // const id = 1300000000;\n        this.gotService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    render() {\n        console.log('render');\n\n        const { char, loading, error } = this.state;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"random-block rounded\">\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        );\n    }\n}\n\nconst View = ({char}) => {\n    const {name, gender, born, died, culture} = char;\n\n    return (\n        <>\n         <h4>Random Character: {name}</h4>\n                <ul className=\"list-group list-group-flush\">\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Gender </span>\n                        <span>{gender}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Born </span>\n                        <span>{born}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Died </span>\n                        <span>{died}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Culture </span>\n                        <span>{culture}</span>\n                    </li>\n                </ul>\n        </>     \n    )\n}\n","import RandomChar from './randomChar';\n\nexport default RandomChar;","import ItemList from './itemList';\n\nexport default ItemList;","import React, {Component} from 'react';\nimport './itemList.css';\nimport gotService from '../../services/gotService';\nimport Spinner from '../spinner'\n\nexport default class ItemList extends Component {\n\n    gotService = new gotService();\n\n    state = {\n        charList: null\n    }\n\n    componentDidMount() {\n        this.gotService.getAllCharacters()\n            .then( (charList) => {\n                this.setState({\n                    charList\n                })\n            })\n    }\n\n    renderItems(arr) {\n        return arr.map((item, i) => {\n            return (\n                <li \n                    key={i}\n                    className=\"list-group-item\"\n                    onClick={ () => this.props.onCharSelected(41 + i)}>\n                    {item.name}\n                </li>\n            )\n        })\n    }\n\n    render() {\n\n        const {charList} = this.state;\n\n        if (!charList) {\n            return <Spinner/>\n        }\n\n        const items = this.renderItems(charList);\n\n        return (\n            <ul className=\"item-list list-group\">\n                {items}\n            </ul>\n        );\n    }\n}","import PersonDetails from './personDetails';\nexport default PersonDetails;","import React, {Component} from 'react';\nimport './personDetails.css';\nimport gotService from '../../services/gotService';\n\nexport default class PersonDetails extends Component {\n\n    gotService = new gotService();\n\n    state = {\n        char: null\n    }\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n\n    updateChar() {\n        const {charId} = this.props;\n        if (!charId) {\n            return;\n        }\n\n        this.gotService.getCharacter(charId)\n            .then((char) => {\n                this.setState({char})\n            })\n            this.foo.bar = 0;\n    }\n\n    render() {\n\n\n        if (!this.state.char) {\n            return <span className='select-error'>Please select a character</span>\n        }\n\n        const {name, gender, born, died, culture} = this.state.char;\n\n        return (\n            <div className=\"person-details rounded\">\n                <h4>{name}</h4>\n                <ul className=\"list-group list-group-flush\">\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Gender</span>\n                        <span>{gender}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Born</span>\n                        <span>{born}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Died</span>\n                        <span>{died}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">{culture}</span>\n                        <span>{culture}</span>\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}","import App from './app';\n\nexport default App;\n","import React, {Component} from 'react';\nimport {Col, Row, Container} from 'reactstrap';\nimport Header from '../header';\nimport RandomChar from '../randomChar';\nimport ItemList from '../itemList';\nimport ErrorMessage from '../error/errorMessage';\nimport PersonDetails from '../personDetails'\n\nimport './app.css';\n\nexport default class App extends Component {\n    state = {\n        showRandomChar: true,\n        error: false,\n        selectedChar: 130\n    };\n\n    toggleRandomCahr = () => {\n        this.setState((state) => {\n            return {\n                showRandomChar: !state.showRandomChar\n            }\n        });\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    render() {\n        if (this.state.error) {\n            return <ErrorMessage/>\n        }\n        const char = this.state.showRandomChar ? <RandomChar/> : null;\n        return (\n            <>\n                <Container>\n                    <Header />\n                </Container>\n                <Container>\n                    <Row>\n                        <Col lg={{size: 5, offset: 0}}>\n                            {char}\n                            <button\n                                className=\"toggle-btn\"\n                                onClick={this.toggleRandomCahr}>Toggle random character</button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md='6'>\n                            <ItemList onCharSelected={this.onCharSelected}/>\n                        </Col>\n                        <Col md='6'>\n                            <PersonDetails charId={this.selectedChar}/>\n                        </Col>\n                    </Row>\n                </Container>\n            </>\n        )\n    }\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}